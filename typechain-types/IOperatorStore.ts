/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IOperatorStoreInterface extends utils.Interface {
  contractName: "IOperatorStore";
  functions: {
    "hasPermission(address,address,uint256,uint256)": FunctionFragment;
    "hasPermissions(address,address,uint256,uint256[])": FunctionFragment;
    "permissionsOf(address,address,uint256)": FunctionFragment;
    "setOperator(address,uint256,uint256[])": FunctionFragment;
    "setOperators(address[],uint256[],uint256[][])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "hasPermission",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "hasPermissions",
    values: [string, string, BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "permissionsOf",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setOperator",
    values: [string, BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setOperators",
    values: [string[], BigNumberish[], BigNumberish[][]]
  ): string;

  decodeFunctionResult(
    functionFragment: "hasPermission",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasPermissions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "permissionsOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOperators",
    data: BytesLike
  ): Result;

  events: {
    "SetOperator(address,address,uint256,uint256[],uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "SetOperator"): EventFragment;
}

export type SetOperatorEvent = TypedEvent<
  [string, string, BigNumber, BigNumber[], BigNumber],
  {
    operator: string;
    account: string;
    domain: BigNumber;
    permissionIndexes: BigNumber[];
    packed: BigNumber;
  }
>;

export type SetOperatorEventFilter = TypedEventFilter<SetOperatorEvent>;

export interface IOperatorStore extends BaseContract {
  contractName: "IOperatorStore";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IOperatorStoreInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    hasPermission(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      _permissionIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    hasPermissions(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      _permissionIndexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    permissionsOf(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setOperator(
      _operator: string,
      _domain: BigNumberish,
      _permissionIndexes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setOperators(
      _operators: string[],
      _domains: BigNumberish[],
      _permissionIndexes: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  hasPermission(
    _operator: string,
    _account: string,
    _domain: BigNumberish,
    _permissionIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  hasPermissions(
    _operator: string,
    _account: string,
    _domain: BigNumberish,
    _permissionIndexes: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<boolean>;

  permissionsOf(
    _operator: string,
    _account: string,
    _domain: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setOperator(
    _operator: string,
    _domain: BigNumberish,
    _permissionIndexes: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setOperators(
    _operators: string[],
    _domains: BigNumberish[],
    _permissionIndexes: BigNumberish[][],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    hasPermission(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      _permissionIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    hasPermissions(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      _permissionIndexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<boolean>;

    permissionsOf(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setOperator(
      _operator: string,
      _domain: BigNumberish,
      _permissionIndexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    setOperators(
      _operators: string[],
      _domains: BigNumberish[],
      _permissionIndexes: BigNumberish[][],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "SetOperator(address,address,uint256,uint256[],uint256)"(
      operator?: string | null,
      account?: string | null,
      domain?: BigNumberish | null,
      permissionIndexes?: null,
      packed?: null
    ): SetOperatorEventFilter;
    SetOperator(
      operator?: string | null,
      account?: string | null,
      domain?: BigNumberish | null,
      permissionIndexes?: null,
      packed?: null
    ): SetOperatorEventFilter;
  };

  estimateGas: {
    hasPermission(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      _permissionIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasPermissions(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      _permissionIndexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    permissionsOf(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setOperator(
      _operator: string,
      _domain: BigNumberish,
      _permissionIndexes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setOperators(
      _operators: string[],
      _domains: BigNumberish[],
      _permissionIndexes: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    hasPermission(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      _permissionIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasPermissions(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      _permissionIndexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    permissionsOf(
      _operator: string,
      _account: string,
      _domain: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setOperator(
      _operator: string,
      _domain: BigNumberish,
      _permissionIndexes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setOperators(
      _operators: string[],
      _domains: BigNumberish[],
      _permissionIndexes: BigNumberish[][],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
