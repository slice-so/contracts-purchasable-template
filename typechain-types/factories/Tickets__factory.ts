/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Tickets, TicketsInterface } from "../Tickets";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "print",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610140523480156200003757600080fd5b506040516200186f3803806200186f8339810160408190526200005a9162000312565b8180604051806040016040528060018152602001603160f81b81525084848160039080519060200190620000909291906200019f565b508051620000a69060049060208401906200019f565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c0948501909152815191909601209052929092526101205250620001459050336200014d565b5050620003b8565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001ad906200037c565b90600052602060002090601f016020900481019282620001d157600085556200021c565b82601f10620001ec57805160ff19168380011785556200021c565b828001600101855582156200021c579182015b828111156200021c578251825591602001919060010190620001ff565b506200022a9291506200022e565b5090565b5b808211156200022a57600081556001016200022f565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026d57600080fd5b81516001600160401b03808211156200028a576200028a62000245565b604051601f8301601f19908116603f01168101908282118183101715620002b557620002b562000245565b81604052838152602092508683858801011115620002d257600080fd5b600091505b83821015620002f65785820183015181830184015290820190620002d7565b83821115620003085760008385830101525b9695505050505050565b600080604083850312156200032657600080fd5b82516001600160401b03808211156200033e57600080fd5b6200034c868387016200025b565b935060208501519150808211156200036357600080fd5b5062000372858286016200025b565b9150509250929050565b600181811c908216806200039157607f821691505b602082108103620003b257634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516101405161145c6200041360003960006105b401526000610cb401526000610d0301526000610cde01526000610c3701526000610c6101526000610c8b015261145c6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a9059cbb11610071578063a9059cbb14610245578063ac68553914610258578063d505accf1461026b578063dd62ed3e1461027e578063f2fde38b146102b757600080fd5b8063715018a6146101f45780637ecebe00146101fc5780638da5cb5b1461020f57806395d89b411461022a578063a457c2d71461023257600080fd5b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a15780633644e515146101b057806339509351146101b857806370a08231146101cb57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd146101675780631e9a695014610179575b600080fd5b61012e6102ca565b60405161013b91906111c3565b60405180910390f35b610157610152366004611234565b61035c565b604051901515815260200161013b565b6002545b60405190815260200161013b565b61018c610187366004611234565b610374565b005b61015761019c36600461125e565b6103b5565b6040516012815260200161013b565b61016b6103d9565b6101576101c6366004611234565b6103e8565b61016b6101d936600461129a565b6001600160a01b031660009081526020819052604090205490565b61018c610427565b61016b61020a36600461129a565b61045d565b6006546040516001600160a01b03909116815260200161013b565b61012e61047d565b610157610240366004611234565b61048c565b610157610253366004611234565b61051e565b61018c610266366004611234565b61052c565b61018c6102793660046112bc565b610560565b61016b61028c36600461132f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018c6102c536600461129a565b6106c4565b6060600380546102d990611362565b80601f016020809104026020016040519081016040528092919081815260200182805461030590611362565b80156103525780601f1061032757610100808354040283529160200191610352565b820191906000526020600020905b81548152906001019060200180831161033557829003601f168201915b5050505050905090565b60003361036a81858561075f565b5060019392505050565b6006546001600160a01b031633146103a75760405162461bcd60e51b815260040161039e90611396565b60405180910390fd5b6103b18282610884565b5050565b6000336103c38582856109ca565b6103ce858585610a5c565b506001949350505050565b60006103e3610c2a565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061036a90829086906104229087906113e1565b61075f565b6006546001600160a01b031633146104515760405162461bcd60e51b815260040161039e90611396565b61045b6000610d51565b565b6001600160a01b0381166000908152600560205260408120545b92915050565b6060600480546102d990611362565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105115760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161039e565b6103ce828686840361075f565b60003361036a818585610a5c565b6006546001600160a01b031633146105565760405162461bcd60e51b815260040161039e90611396565b6103b18282610da3565b834211156105b05760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161039e565b60007f00000000000000000000000000000000000000000000000000000000000000008888886105df8c610e82565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061063a82610eaa565b9050600061064a82878787610ef8565b9050896001600160a01b0316816001600160a01b0316146106ad5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161039e565b6106b88a8a8a61075f565b50505050505050505050565b6006546001600160a01b031633146106ee5760405162461bcd60e51b815260040161039e90611396565b6001600160a01b0381166107535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161039e565b61075c81610d51565b50565b6001600160a01b0383166107c15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161039e565b6001600160a01b0382166108225760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161039e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0382166108e45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161039e565b6001600160a01b038216600090815260208190526040902054818110156109585760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161039e565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109879084906113f9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610877565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610a565781811015610a495760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161039e565b610a56848484840361075f565b50505050565b6001600160a01b038316610ac05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161039e565b6001600160a01b038216610b225760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161039e565b6001600160a01b03831660009081526020819052604090205481811015610b9a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161039e565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610bd19084906113e1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c1d91815260200190565b60405180910390a3610a56565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610c8357507f000000000000000000000000000000000000000000000000000000000000000046145b15610cad57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610df95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161039e565b8060026000828254610e0b91906113e1565b90915550506001600160a01b03821660009081526020819052604081208054839290610e389084906113e1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b6000610477610eb7610c2a565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610f0987878787610f20565b91509150610f168161100d565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610f575750600090506003611004565b8460ff16601b14158015610f6f57508460ff16601c14155b15610f805750600090506004611004565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610fd4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ffd57600060019250925050611004565b9150600090505b94509492505050565b600081600481111561102157611021611410565b036110295750565b600181600481111561103d5761103d611410565b0361108a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161039e565b600281600481111561109e5761109e611410565b036110eb5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161039e565b60038160048111156110ff576110ff611410565b036111575760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161039e565b600481600481111561116b5761116b611410565b0361075c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161039e565b600060208083528351808285015260005b818110156111f0578581018301518582016040015282016111d4565b81811115611202576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461122f57600080fd5b919050565b6000806040838503121561124757600080fd5b61125083611218565b946020939093013593505050565b60008060006060848603121561127357600080fd5b61127c84611218565b925061128a60208501611218565b9150604084013590509250925092565b6000602082840312156112ac57600080fd5b6112b582611218565b9392505050565b600080600080600080600060e0888a0312156112d757600080fd5b6112e088611218565b96506112ee60208901611218565b95506040880135945060608801359350608088013560ff8116811461131257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561134257600080fd5b61134b83611218565b915061135960208401611218565b90509250929050565b600181811c9082168061137657607f821691505b602082108103610ea457634e487b7160e01b600052602260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156113f4576113f46113cb565b500190565b60008282101561140b5761140b6113cb565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212205f1c2dbab51d15eaa41b17001442855a4b672c2ab9c26d2554e75d46601eb9ce64736f6c634300080d0033";

type TicketsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tickets__factory extends ContractFactory {
  constructor(...args: TicketsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Tickets";
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Tickets> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Tickets>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): Tickets {
    return super.attach(address) as Tickets;
  }
  connect(signer: Signer): Tickets__factory {
    return super.connect(signer) as Tickets__factory;
  }
  static readonly contractName: "Tickets";
  public readonly contractName: "Tickets";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketsInterface {
    return new utils.Interface(_abi) as TicketsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Tickets {
    return new Contract(address, _abi, signerOrProvider) as Tickets;
  }
}
