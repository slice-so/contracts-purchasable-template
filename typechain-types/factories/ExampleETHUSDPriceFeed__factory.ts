/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExampleETHUSDPriceFeed,
  ExampleETHUSDPriceFeedInterface,
} from "../ExampleETHUSDPriceFeed";

const _abi = [
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610216806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063313ce5671461005c57806354fd4d50146100705780637284e4161461007f5780639a6fc8f514610094578063feaf968c146100f0575b600080fd5b604051601281526020015b60405180910390f35b60405160008152602001610067565b610087610104565b6040516100679190610124565b6100b96100a2366004610179565b50600090686c6b935b8bbd40000090829081908190565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a001610067565b6000686c6b935b8bbd4000008180806100b9565b60606040518060600160405280603481526020016101ad60349139905090565b600060208083528351808285015260005b8181101561015157858101830151858201604001528201610135565b81811115610163576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561018b57600080fd5b813569ffffffffffffffffffff811681146101a557600080fd5b939250505056fe537461746963204554482f55534420707269636520666565642e20446f206e6f742075736520696e2070726f64756374696f6e2ea2646970667358221220005aaeedbebb25d4c1a3e0427d6b6984ae37354bbef4603750871a962fafed9364736f6c634300080d0033";

type ExampleETHUSDPriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleETHUSDPriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleETHUSDPriceFeed__factory extends ContractFactory {
  constructor(...args: ExampleETHUSDPriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ExampleETHUSDPriceFeed";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExampleETHUSDPriceFeed> {
    return super.deploy(overrides || {}) as Promise<ExampleETHUSDPriceFeed>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExampleETHUSDPriceFeed {
    return super.attach(address) as ExampleETHUSDPriceFeed;
  }
  connect(signer: Signer): ExampleETHUSDPriceFeed__factory {
    return super.connect(signer) as ExampleETHUSDPriceFeed__factory;
  }
  static readonly contractName: "ExampleETHUSDPriceFeed";
  public readonly contractName: "ExampleETHUSDPriceFeed";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleETHUSDPriceFeedInterface {
    return new utils.Interface(_abi) as ExampleETHUSDPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleETHUSDPriceFeed {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExampleETHUSDPriceFeed;
  }
}
