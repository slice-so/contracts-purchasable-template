/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DirectPaymentAddress,
  DirectPaymentAddressInterface,
} from "../DirectPaymentAddress";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ITerminalDirectory",
        name: "_terminalDirectory",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_memo",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "memo",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "preferUnstakedTickets",
        type: "bool",
      },
    ],
    name: "Forward",
    type: "event",
  },
  {
    inputs: [],
    name: "memo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "terminalDirectory",
    outputs: [
      {
        internalType: "contract ITerminalDirectory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161093738038061093783398101604081905261002f9161010c565b6001600160a01b03831660805260a0829052805161005490600090602084019061005d565b50505050610241565b82805461006990610207565b90600052602060002090601f01602090048101928261008b57600085556100d1565b82601f106100a457805160ff19168380011785556100d1565b828001600101855582156100d1579182015b828111156100d15782518255916020019190600101906100b6565b506100dd9291506100e1565b5090565b5b808211156100dd57600081556001016100e2565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561012157600080fd5b83516001600160a01b038116811461013857600080fd5b60208581015160408701519295509350906001600160401b038082111561015e57600080fd5b818701915087601f83011261017257600080fd5b815181811115610184576101846100f6565b604051601f8201601f19908116603f011681019083821181831017156101ac576101ac6100f6565b816040528281528a868487010111156101c457600080fd5b600093505b828410156101e657848401860151818501870152928501926101c9565b828411156101f75760008684830101525b8096505050505050509250925092565b600181811c9082168061021b57607f821691505b60208210810361023b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a0516106a861028f6000396000818161018301528181610230015281816102b80152610338015260008181605501528181610107015281816101ac01526103a101526106a86000f3fe6080604052600436106100385760003560e01c80633fafa1271461032657806358c3b8701461036d5780636abcf8e31461038f57600080fd5b366103215760405163ba7bffd360e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ba7bffd3906024016020604051808303816000875af11580156100a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ca9190610481565b905060006001600160a01b0382166100e257336100e4565b815b604051634ee5fceb60e11b81523360048201529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639dcbf9d6906024016020604051808303816000875af1158015610150573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017491906104a5565b604051634fe0eced60e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634fe0eced90602401602060405180830381865afa1580156101fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021f9190610481565b6001600160a01b03166302c8986f347f0000000000000000000000000000000000000000000000000000000000000000856000866040518663ffffffff1660e01b815260040161027294939291906105a0565b60206040518083038185885af1158015610290573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102b591906105dd565b507f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03167f73c0c8eb2e5343fd4f621dee6cc0dd1f91a240b7a6245465fa884753efd7cab3843460008660405161031794939291906105f6565b60405180910390a3005b600080fd5b34801561033257600080fd5b5061035a7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561037957600080fd5b506103826103db565b604051610364919061061d565b34801561039b57600080fd5b506103c37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610364565b600080546103e8906104c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610414906104c7565b80156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b505050505081565b6001600160a01b038116811461047e57600080fd5b50565b60006020828403121561049357600080fd5b815161049e81610469565b9392505050565b6000602082840312156104b757600080fd5b8151801515811461049e57600080fd5b600181811c908216806104db57607f821691505b6020821081036104fb57634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168061051b57607f831692505b6020808410820361053c57634e487b7160e01b600052602260045260246000fd5b83885260208801828015610557576001811461056857610593565b60ff19871682528282019750610593565b60008981526020902060005b8781101561058d57815484820152908601908401610574565b83019850505b5050505050505092915050565b8481526001600160a01b03841660208201526080604082018190526000906105ca90830185610501565b9050821515606083015295945050505050565b6000602082840312156105ef57600080fd5b5051919050565b60018060a01b03851681528360208201526080604082015260006105ca6080830185610501565b600060208083528351808285015260005b8181101561064a5785810183015185820160400152820161062e565b8181111561065c576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212200e2af8666bac681cc401889dc9133ffc202780492c934e49aea9158a32cb808264736f6c634300080d0033";

type DirectPaymentAddressConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DirectPaymentAddressConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DirectPaymentAddress__factory extends ContractFactory {
  constructor(...args: DirectPaymentAddressConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DirectPaymentAddress";
  }

  deploy(
    _terminalDirectory: string,
    _projectId: BigNumberish,
    _memo: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DirectPaymentAddress> {
    return super.deploy(
      _terminalDirectory,
      _projectId,
      _memo,
      overrides || {}
    ) as Promise<DirectPaymentAddress>;
  }
  getDeployTransaction(
    _terminalDirectory: string,
    _projectId: BigNumberish,
    _memo: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _terminalDirectory,
      _projectId,
      _memo,
      overrides || {}
    );
  }
  attach(address: string): DirectPaymentAddress {
    return super.attach(address) as DirectPaymentAddress;
  }
  connect(signer: Signer): DirectPaymentAddress__factory {
    return super.connect(signer) as DirectPaymentAddress__factory;
  }
  static readonly contractName: "DirectPaymentAddress";
  public readonly contractName: "DirectPaymentAddress";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DirectPaymentAddressInterface {
    return new utils.Interface(_abi) as DirectPaymentAddressInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DirectPaymentAddress {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DirectPaymentAddress;
  }
}
