/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { YourContract, YourContractInterface } from "../YourContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "contract ITerminalDirectory",
        name: "_directory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_memo",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_preferUnstakedTickets",
        type: "bool",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "projectId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOperatorStore",
        name: "_operatorStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_permissionIndexes",
        type: "uint256[]",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOperatorStore",
        name: "_operatorStore",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_operators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_projectIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[][]",
        name: "_permissionIndexes",
        type: "uint256[][]",
      },
    ],
    name: "setOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
    ],
    name: "setProjectId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "terminalDirectory",
    outputs: [
      {
        internalType: "contract ITerminalDirectory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IProjects",
        name: "_projects",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "transferProjectOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610f41380380610f4183398101604081905261002f916100a4565b818161003a33610054565b6001919091556001600160a01b0316608052506100e19050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100b757600080fd5b825160208401519092506001600160a01b03811681146100d657600080fd5b809150509250929050565b608051610e3e6101036000396000818161015901526103cc0152610e3e6000f3fe6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b146101bb578063999a244f146101d9578063c0a485e2146101f9578063ce9246dd14610219578063f2fde38b14610239578063f3fef3a31461025957600080fd5b8063150b7a02146100b75780633fafa12714610101578063544c0e15146101255780636abcf8e314610147578063715018a614610193578063897c063e146101a857600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100e36100d23660046108f6565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561010d57600080fd5b5061011760015481565b6040519081526020016100f8565b34801561013157600080fd5b506101456101403660046109ae565b610279565b005b34801561015357600080fd5b5061017b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f8565b34801561019f57600080fd5b50610145610317565b6101456101b6366004610a10565b61034d565b3480156101c757600080fd5b506000546001600160a01b031661017b565b3480156101e557600080fd5b506101456101f4366004610a7d565b61052f565b34801561020557600080fd5b506101456102143660046108f6565b6105ca565b34801561022557600080fd5b50610145610234366004610b2a565b610628565b34801561024557600080fd5b50610145610254366004610b43565b610657565b34801561026557600080fd5b50610145610274366004610b67565b6106f2565b6000546001600160a01b031633146102ac5760405162461bcd60e51b81526004016102a390610b93565b60405180910390fd5b604051632f53664360e11b81526001600160a01b03861690635ea6cc86906102de908790879087908790600401610bfe565b600060405180830381600087803b1580156102f857600080fd5b505af115801561030c573d6000803e3d6000fd5b505050505050505050565b6000546001600160a01b031633146103415760405162461bcd60e51b81526004016102a390610b93565b61034b600061072a565b565b6001546000036103af5760405162461bcd60e51b815260206004820152602760248201527f4a75696365626f7850726f6a6563743a3a7061793a2050524f4a4543545f4e4f6044820152661517d193d5539160ca1b60648201526084016102a3565b600154604051634fe0eced60e01b81526000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691634fe0eced916104039160040190815260200190565b602060405180830381865afa158015610420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104449190610c30565b90506001600160a01b0381166104ad5760405162461bcd60e51b815260206004820152602860248201527f4a75696365626f7850726f6a6563743a3a7061793a205445524d494e414c5f4e60448201526713d517d193d5539160c21b60648201526084016102a3565b6001546040516302c8986f60e01b81526001600160a01b038316916302c8986f9134916104e4918a908a908a908a90600401610c76565b60206040518083038185885af1158015610502573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105279190610cb5565b505050505050565b6000546001600160a01b031633146105595760405162461bcd60e51b81526004016102a390610b93565b6040516393535be160e01b81526001600160a01b038816906393535be19061058f90899089908990899089908990600401610cce565b600060405180830381600087803b1580156105a957600080fd5b505af11580156105bd573d6000803e3d6000fd5b5050505050505050505050565b6000546001600160a01b031633146105f45760405162461bcd60e51b81526004016102a390610b93565b604051635c46a7ef60e11b81526001600160a01b0386169063b88d4fde906102de9030908890889088908890600401610dc9565b6000546001600160a01b031633146106525760405162461bcd60e51b81526004016102a390610b93565b600155565b6000546001600160a01b031633146106815760405162461bcd60e51b81526004016102a390610b93565b6001600160a01b0381166106e65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a3565b6106ef8161072a565b50565b6000546001600160a01b0316331461071c5760405162461bcd60e51b81526004016102a390610b93565b610726828261077a565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b804710156107ca5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102a3565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610817576040519150601f19603f3d011682016040523d82523d6000602084013e61081c565b606091505b50509050806108935760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102a3565b505050565b6001600160a01b03811681146106ef57600080fd5b60008083601f8401126108bf57600080fd5b50813567ffffffffffffffff8111156108d757600080fd5b6020830191508360208285010111156108ef57600080fd5b9250929050565b60008060008060006080868803121561090e57600080fd5b853561091981610898565b9450602086013561092981610898565b935060408601359250606086013567ffffffffffffffff81111561094c57600080fd5b610958888289016108ad565b969995985093965092949392505050565b60008083601f84011261097b57600080fd5b50813567ffffffffffffffff81111561099357600080fd5b6020830191508360208260051b85010111156108ef57600080fd5b6000806000806000608086880312156109c657600080fd5b85356109d181610898565b945060208601356109e181610898565b935060408601359250606086013567ffffffffffffffff811115610a0457600080fd5b61095888828901610969565b60008060008060608587031215610a2657600080fd5b8435610a3181610898565b9350602085013567ffffffffffffffff811115610a4d57600080fd5b610a59878288016108ad565b90945092505060408501358015158114610a7257600080fd5b939692955090935050565b60008060008060008060006080888a031215610a9857600080fd5b8735610aa381610898565b9650602088013567ffffffffffffffff80821115610ac057600080fd5b610acc8b838c01610969565b909850965060408a0135915080821115610ae557600080fd5b610af18b838c01610969565b909650945060608a0135915080821115610b0a57600080fd5b50610b178a828b01610969565b989b979a50959850939692959293505050565b600060208284031215610b3c57600080fd5b5035919050565b600060208284031215610b5557600080fd5b8135610b6081610898565b9392505050565b60008060408385031215610b7a57600080fd5b8235610b8581610898565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b81835260006001600160fb1b03831115610be157600080fd5b8260051b8083602087013760009401602001938452509192915050565b60018060a01b0385168152836020820152606060408201526000610c26606083018486610bc8565b9695505050505050565b600060208284031215610c4257600080fd5b8151610b6081610898565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8581526001600160a01b0385166020820152608060408201819052600090610ca19083018587610c4d565b905082151560608301529695505050505050565b600060208284031215610cc757600080fd5b5051919050565b6060808252810186905260008760808301825b89811015610d11578235610cf481610898565b6001600160a01b0316825260209283019290910190600101610ce1565b506020915083810382850152610d2881888a610bc8565b84810360408601528581529050818101600586811b830184018860005b89811015610db657858303601f190185528135368c9003601e19018112610d6b57600080fd5b8b01803567ffffffffffffffff811115610d8457600080fd5b80861b36038d1315610d9557600080fd5b610da285828b8501610bc8565b968901969450505090860190600101610d45565b50909d9c50505050505050505050505050565b6001600160a01b0386811682528516602082015260408101849052608060608201819052600090610dfd9083018486610c4d565b97965050505050505056fea26469706673582212209afdf1e954ca5720b02ad9270142491fc223e7964dd0c17d8645bb1a88e7b73b64736f6c634300080d0033";

type YourContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourContract__factory extends ContractFactory {
  constructor(...args: YourContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YourContract";
  }

  deploy(
    _projectId: BigNumberish,
    _directory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YourContract> {
    return super.deploy(
      _projectId,
      _directory,
      overrides || {}
    ) as Promise<YourContract>;
  }
  getDeployTransaction(
    _projectId: BigNumberish,
    _directory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_projectId, _directory, overrides || {});
  }
  attach(address: string): YourContract {
    return super.attach(address) as YourContract;
  }
  connect(signer: Signer): YourContract__factory {
    return super.connect(signer) as YourContract__factory;
  }
  static readonly contractName: "YourContract";
  public readonly contractName: "YourContract";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourContractInterface {
    return new utils.Interface(_abi) as YourContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YourContract {
    return new Contract(address, _abi, signerOrProvider) as YourContract;
  }
}
