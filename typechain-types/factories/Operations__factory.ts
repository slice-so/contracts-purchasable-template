/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Operations, OperationsInterface } from "../Operations";

const _abi = [
  {
    inputs: [],
    name: "ClaimHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Configure",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Issue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Lock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Migrate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PrintPreminedTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PrintTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RenewHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SetHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SetPayoutMods",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SetTerminal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SetTicketMods",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SetUri",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Stake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Transfer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101ea61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101155760003560e01c80637fe8bf4c116100ac578063ac313c961161007b578063ac313c961461018c578063b553891d14610194578063ba4b2ac01461019c578063d95402e7146101a4578063de20bc92146101ac57600080fd5b80637fe8bf4c1461016c57806382cebea514610174578063880a4e8b1461017c5780639d0ea7f81461018457600080fd5b8063467c4e68116100e8578063467c4e681461014c5780635e36203f1461015457806363c6b0931461015c5780637538eecf1461016457600080fd5b8063105fd46a1461011a578063207aba2414610134578063406dade31461013c57806346620e3914610144575b600080fd5b610122600581565b60405190815260200160405180910390f35b610122600481565b610122600c81565b610122600d81565b610122600981565b610122600181565b610122600681565b610122600b81565b610122601181565b610122601081565b610122600781565b610122600881565b610122600e81565b610122600281565b610122600f81565b610122600381565b610122600a8156fea26469706673582212203b0b433f7088af635b63ba0f6f4a9f99f3ebe767cdc494a641b360645366643e64736f6c634300080d0033";

type OperationsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OperationsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Operations__factory extends ContractFactory {
  constructor(...args: OperationsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Operations";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Operations> {
    return super.deploy(overrides || {}) as Promise<Operations>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Operations {
    return super.attach(address) as Operations;
  }
  connect(signer: Signer): Operations__factory {
    return super.connect(signer) as Operations__factory;
  }
  static readonly contractName: "Operations";
  public readonly contractName: "Operations";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OperationsInterface {
    return new utils.Interface(_abi) as OperationsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Operations {
    return new Contract(address, _abi, signerOrProvider) as Operations;
  }
}
