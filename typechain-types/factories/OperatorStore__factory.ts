/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OperatorStore, OperatorStoreInterface } from "../OperatorStore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "domain",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "permissionIndexes",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "packed",
        type: "uint256",
      },
    ],
    name: "SetOperator",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_permissionIndex",
        type: "uint256",
      },
    ],
    name: "hasPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_permissionIndexes",
        type: "uint256[]",
      },
    ],
    name: "hasPermissions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "permissionsOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_domain",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_permissionIndexes",
        type: "uint256[]",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_operators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_domains",
        type: "uint256[]",
      },
      {
        internalType: "uint256[][]",
        name: "_permissionIndexes",
        type: "uint256[][]",
      },
    ],
    name: "setOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610942806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630f5932f01461005c5780635ea6cc861461008457806380deb2301461009957806393535be1146100d7578063c161c93f146100ea575b600080fd5b61006f61006a36600461063c565b6100fd565b60405190151581526020015b60405180910390f35b6100976100923660046106ab565b6101fd565b005b6100c96100a7366004610705565b6000602081815293815260408082208552928152828120909352825290205481565b60405190815260200161007b565b6100976100e5366004610741565b610283565b61006f6100f83660046107db565b61046f565b6000805b828110156101ee57600084848381811061011d5761011d61081d565b90506020020135905060ff8111156101975760405162461bcd60e51b815260206004820152603260248201527f4f70657261746f7253746f72653a3a6861735065726d697373696f6e733a20496044820152714e4445585f4f55545f4f465f424f554e445360701b60648201526084015b60405180910390fd5b6001600160a01b03888116600090815260208181526040808320938b168352928152828220898352905290812054821c60011690036101db576000925050506101f4565b50806101e681610833565b915050610101565b50600190505b95945050505050565b60006102098383610519565b6001600160a01b038616600081815260208181526040808320338085529083528184208a855290925291829020849055905192935086929091907f9dee2ffb464e2d0198cd20321be1ae3f79ed49f7ed4abfaa7ee4fe982bbeb320906102749088908890889061085a565b60405180910390a45050505050565b848114801561029157508483145b6102eb5760405162461bcd60e51b815260206004820152602560248201527f4f70657261746f7253746f72653a3a7365744f70657261746f72733a204241446044820152645f4152475360d81b606482015260840161018e565b60005b8581101561046657600061032484848481811061030d5761030d61081d565b905060200281019061031f91906108a0565b610519565b9050806000808a8a8681811061033c5761033c61081d565b905060200201602081019061035191906108ea565b6001600160a01b031681526020808201929092526040908101600090812033825290925281209088888681811061038a5761038a61081d565b905060200201358152602001908152602001600020819055508585838181106103b5576103b561081d565b90506020020135336001600160a01b03168989858181106103d8576103d861081d565b90506020020160208101906103ed91906108ea565b6001600160a01b03167f9dee2ffb464e2d0198cd20321be1ae3f79ed49f7ed4abfaa7ee4fe982bbeb3208787878181106104295761042961081d565b905060200281019061043b91906108a0565b8660405161044b9392919061085a565b60405180910390a4508061045e81610833565b9150506102ee565b50505050505050565b600060ff8211156104dc5760405162461bcd60e51b815260206004820152603160248201527f4f70657261746f7253746f72653a3a6861735065726d697373696f6e3a20494e6044820152704445585f4f55545f4f465f424f554e445360781b606482015260840161018e565b506001600160a01b03808516600090815260208181526040808320938716835292815282822085835290522054600190821c811614949350505050565b6000805b828110156105cd5760008484838181106105395761053961081d565b90506020020135905060ff8111156105b25760405162461bcd60e51b815260206004820152603660248201527f4f70657261746f7253746f72653a3a5f7061636b65645065726d697373696f6e604482015275733a20494e4445585f4f55545f4f465f424f554e445360501b606482015260840161018e565b6001901b9190911790806105c581610833565b91505061051d565b5092915050565b80356001600160a01b03811681146105eb57600080fd5b919050565b60008083601f84011261060257600080fd5b50813567ffffffffffffffff81111561061a57600080fd5b6020830191508360208260051b850101111561063557600080fd5b9250929050565b60008060008060006080868803121561065457600080fd5b61065d866105d4565b945061066b602087016105d4565b935060408601359250606086013567ffffffffffffffff81111561068e57600080fd5b61069a888289016105f0565b969995985093965092949392505050565b600080600080606085870312156106c157600080fd5b6106ca856105d4565b935060208501359250604085013567ffffffffffffffff8111156106ed57600080fd5b6106f9878288016105f0565b95989497509550505050565b60008060006060848603121561071a57600080fd5b610723846105d4565b9250610731602085016105d4565b9150604084013590509250925092565b6000806000806000806060878903121561075a57600080fd5b863567ffffffffffffffff8082111561077257600080fd5b61077e8a838b016105f0565b9098509650602089013591508082111561079757600080fd5b6107a38a838b016105f0565b909650945060408901359150808211156107bc57600080fd5b506107c989828a016105f0565b979a9699509497509295939492505050565b600080600080608085870312156107f157600080fd5b6107fa856105d4565b9350610808602086016105d4565b93969395505050506040820135916060013590565b634e487b7160e01b600052603260045260246000fd5b60006001820161085357634e487b7160e01b600052601160045260246000fd5b5060010190565b6040808252810183905260006001600160fb1b0384111561087a57600080fd5b8360051b8086606085013760009083016060019081526020909201929092529392505050565b6000808335601e198436030181126108b757600080fd5b83018035915067ffffffffffffffff8211156108d257600080fd5b6020019150600581901b360382131561063557600080fd5b6000602082840312156108fc57600080fd5b610905826105d4565b939250505056fea26469706673582212208cb59331bff4a209ca4bccd8913c90a44c2f5f879e552fb2b7a47fde20931e4264736f6c634300080d0033";

type OperatorStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OperatorStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OperatorStore__factory extends ContractFactory {
  constructor(...args: OperatorStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "OperatorStore";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OperatorStore> {
    return super.deploy(overrides || {}) as Promise<OperatorStore>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OperatorStore {
    return super.attach(address) as OperatorStore;
  }
  connect(signer: Signer): OperatorStore__factory {
    return super.connect(signer) as OperatorStore__factory;
  }
  static readonly contractName: "OperatorStore";
  public readonly contractName: "OperatorStore";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OperatorStoreInterface {
    return new utils.Interface(_abi) as OperatorStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OperatorStore {
    return new Contract(address, _abi, signerOrProvider) as OperatorStore;
  }
}
